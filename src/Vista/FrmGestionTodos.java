/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.CtlAdministrador;
import Controlador.CtlBibliotecario;
import Controlador.CtlLector;
import Modelo.Administrador;
import Modelo.Bibliotecario;
import Modelo.Lector;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Cristian Cruz
 */
public class FrmGestionTodos extends javax.swing.JFrame {

    private CtlAdministrador controlador;
    private CtlBibliotecario controlador2;
    private CtlLector controlador3;

    public FrmGestionTodos() {
        initComponents();
        setLocationRelativeTo(this);
        setResizable(false);
        BloqueoPosicion0();
        btnModificarUsuario.setEnabled(false);
        btnCancelarUsuario.setVisible(false);
        controlador = new CtlAdministrador();
        controlador2 = new CtlBibliotecario();
        controlador3 = new CtlLector();
        listarTablas();
    }

    public void BloqueoPosicion0() {

        if (cbGestionTipoUsuario.getSelectedIndex() == 0) {

            txtNombreUsuario.setEnabled(false);
            txtCodigoUsuario.setEnabled(false);
            txtCorreoUsuario.setEnabled(false);
            txtCedulaUsuario.setEnabled(false);
            txtDireccionUsuario.setEnabled(false);
            txtSalarioAdministrador.setVisible(true);
            jdFechaIngreso.setVisible(true);
            cbTurno.setVisible(true);
            jLabel8.setVisible(true);
            jLabel7.setVisible(true);
            jLabel10.setVisible(true);
            txtSalarioAdministrador.setEnabled(false);
            jdFechaIngreso.setEnabled(false);
            cbTurno.setEnabled(false);
        }
    }

    public void LimpiarCampos() {

        txtNombreUsuario.setText("");
        txtCodigoUsuario.setText("");
        txtCorreoUsuario.setText("");
        txtCedulaUsuario.setText("");
        txtDireccionUsuario.setText("");
        txtSalarioAdministrador.setText("");
        jdFechaIngreso.setDate(null);
        cbTurno.setSelectedIndex(0);
        cbGestionTipoUsuario.setSelectedIndex(0);

    }

    public void listarTablas() {

        DefaultTableModel modelo;
        modelo = controlador.listarA();
        tblAdministrador.setModel(modelo);

        DefaultTableModel modelo2;
        modelo2 = controlador2.listarB();
        tblBibliotecario.setModel(modelo2);

        DefaultTableModel modelo3;
        modelo3 = controlador3.listarL();
        tblLector.setModel(modelo3);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNombreUsuario = new javax.swing.JTextField();
        txtCodigoUsuario = new javax.swing.JTextField();
        txtCedulaUsuario = new javax.swing.JTextField();
        txtDireccionUsuario = new javax.swing.JTextField();
        txtCorreoUsuario = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAdministrador = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtSalarioAdministrador = new javax.swing.JTextField();
        btnRegistrarUsuario = new javax.swing.JButton();
        btnModificarUsuario = new javax.swing.JButton();
        btnEliminarUsuario = new javax.swing.JButton();
        btnBuscarUsuario = new javax.swing.JButton();
        btnCancelarUsuario = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        cbGestionTipoUsuario = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        cbTurno = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblLector = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblBibliotecario = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jdFechaIngreso = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 2, 18)); // NOI18N
        jLabel1.setText("Gestion Usuarios");

        jLabel2.setText("Nombre Completo :");

        jLabel3.setText("Codigo :");

        jLabel4.setText("Cedula :");

        jLabel5.setText("Direccion :");

        jLabel6.setText("Correo :");

        txtNombreUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreUsuarioActionPerformed(evt);
            }
        });
        txtNombreUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreUsuarioKeyTyped(evt);
            }
        });

        txtCodigoUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoUsuarioKeyTyped(evt);
            }
        });

        txtCedulaUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCedulaUsuarioActionPerformed(evt);
            }
        });
        txtCedulaUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCedulaUsuarioKeyTyped(evt);
            }
        });

        tblAdministrador.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Nombre", "Codigo", "Cedula", "Direccion", "Correo", "Salario", "Fecha Ingreso"
            }
        ));
        jScrollPane1.setViewportView(tblAdministrador);

        jLabel7.setText("Salario :");

        jLabel8.setText("Fecha Ingreso :");

        txtSalarioAdministrador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSalarioAdministradorKeyTyped(evt);
            }
        });

        btnRegistrarUsuario.setText("Registrar");
        btnRegistrarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarUsuarioActionPerformed(evt);
            }
        });

        btnModificarUsuario.setText("Modificar");
        btnModificarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarUsuarioActionPerformed(evt);
            }
        });

        btnEliminarUsuario.setText("Eliminar");
        btnEliminarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarUsuarioActionPerformed(evt);
            }
        });

        btnBuscarUsuario.setText("Buscar");
        btnBuscarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarUsuarioActionPerformed(evt);
            }
        });

        btnCancelarUsuario.setText("Cancelar");
        btnCancelarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarUsuarioActionPerformed(evt);
            }
        });

        jLabel9.setText("Tipo de usuario :");

        cbGestionTipoUsuario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una opcion...", "Administrador", "Bibliotecario", "Lector" }));
        cbGestionTipoUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbGestionTipoUsuarioActionPerformed(evt);
            }
        });

        jLabel10.setText("Turno Atencion :");

        cbTurno.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una opcion...", "Ma√±ana", "Tarde", "Noche" }));

        tblLector.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nombre", "Codigo", "Cedula", "Direccion", "Correo"
            }
        ));
        jScrollPane2.setViewportView(tblLector);

        tblBibliotecario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Nombre", "Codigo", "Cedula", "Direccion", "Correo", "Jornada"
            }
        ));
        jScrollPane3.setViewportView(tblBibliotecario);

        jLabel11.setText("Administradores");

        jLabel12.setText("Bibliotecarios");

        jLabel13.setText("Lectores");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(btnEliminarUsuario)
                        .addGap(35, 35, 35)
                        .addComponent(btnBuscarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel4)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(cbTurno, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtNombreUsuario, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCodigoUsuario, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCedulaUsuario, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDireccionUsuario, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCorreoUsuario, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSalarioAdministrador, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbGestionTipoUsuario, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jdFechaIngreso, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(btnRegistrarUsuario))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnModificarUsuario)
                            .addComponent(btnCancelarUsuario))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 572, Short.MAX_VALUE)
                    .addComponent(jScrollPane3)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(381, 381, 381)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(cbGestionTipoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtNombreUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txtCodigoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(txtCedulaUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDireccionUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtCorreoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtSalarioAdministrador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jdFechaIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(cbTurno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(15, 15, 15)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(btnRegistrarUsuario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnEliminarUsuario)
                            .addComponent(btnBuscarUsuario))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnModificarUsuario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelarUsuario)))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbGestionTipoUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbGestionTipoUsuarioActionPerformed
        // TODO add your handling code here:

        BloqueoPosicion0();

        if (cbGestionTipoUsuario.getSelectedIndex() == 1) {
            txtNombreUsuario.setEnabled(true);
            txtCodigoUsuario.setEnabled(true);
            txtCorreoUsuario.setEnabled(true);
            txtDireccionUsuario.setEnabled(true);
            txtCedulaUsuario.setEnabled(true);
            jdFechaIngreso.setEnabled(true);
            txtSalarioAdministrador.setEnabled(true);
            cbTurno.setVisible(false);
            jLabel10.setVisible(false);
            jdFechaIngreso.setVisible(true);
            txtSalarioAdministrador.setVisible(true);
            jLabel7.setVisible(true);
            jLabel8.setVisible(true);
        }

        if (cbGestionTipoUsuario.getSelectedIndex() == 2) {
            txtNombreUsuario.setEnabled(true);
            txtCodigoUsuario.setEnabled(true);
            txtCorreoUsuario.setEnabled(true);
            txtDireccionUsuario.setEnabled(true);
            txtCedulaUsuario.setEnabled(true);
            jdFechaIngreso.setVisible(false);
            txtSalarioAdministrador.setVisible(false);
            cbTurno.setVisible(true);
            jLabel10.setVisible(true);
            jLabel8.setVisible(false);
            jLabel7.setVisible(false);
            cbTurno.setEnabled(true);

        }

        if (cbGestionTipoUsuario.getSelectedIndex() == 3) {
            txtNombreUsuario.setEnabled(true);
            txtCodigoUsuario.setEnabled(true);
            txtCorreoUsuario.setEnabled(true);
            txtDireccionUsuario.setEnabled(true);
            txtCedulaUsuario.setEnabled(true);
            jdFechaIngreso.setVisible(false);
            txtSalarioAdministrador.setVisible(false);
            cbTurno.setVisible(false);
            jLabel10.setVisible(false);
            jLabel8.setVisible(false);
            jLabel7.setVisible(false);

        }

    }//GEN-LAST:event_cbGestionTipoUsuarioActionPerformed

    private void btnCancelarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarUsuarioActionPerformed
        // TODO add your handling code here:
        LimpiarCampos();
        cbGestionTipoUsuario.setEnabled(true);
        txtCedulaUsuario.setEditable(true);
        btnModificarUsuario.setEnabled(false);
        btnCancelarUsuario.setVisible(false);
        btnRegistrarUsuario.setEnabled(true);
    }//GEN-LAST:event_btnCancelarUsuarioActionPerformed

    private void btnRegistrarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarUsuarioActionPerformed
        // TODO add your handling code here:

        if (cbGestionTipoUsuario.getSelectedIndex() == 0) {

            JOptionPane.showMessageDialog(null, "Selecciona algun usuario y llena los campos");

        } else if (cbGestionTipoUsuario.getSelectedIndex() == 1) {

            if (txtNombreUsuario.getText().isEmpty()
                    || txtCodigoUsuario.getText().isEmpty()
                    || txtCedulaUsuario.getText().isEmpty()
                    || txtDireccionUsuario.getText().isEmpty()
                    || txtCorreoUsuario.getText().isEmpty()
                    || jdFechaIngreso.getDate() == null
                    || txtSalarioAdministrador.getText().isEmpty()) {

                JOptionPane.showMessageDialog(null, "Llene todos los campos por favor");

            } else {

                String nombreUsuario,
                        codigoUsuario,
                        cedulaUsuario,
                        direccionUsuario,
                        correoUsuario;

                double salarioUsuario;
                Date fechaIngresoUsuario;

                nombreUsuario = txtNombreUsuario.getText();
                codigoUsuario = txtCodigoUsuario.getText();
                cedulaUsuario = txtCedulaUsuario.getText();
                direccionUsuario = txtDireccionUsuario.getText();
                correoUsuario = txtCorreoUsuario.getText();
                salarioUsuario = Double.parseDouble(txtSalarioAdministrador.getText());
                fechaIngresoUsuario = jdFechaIngreso.getDate();

                Administrador administrador = new Administrador(salarioUsuario, fechaIngresoUsuario, codigoUsuario, cedulaUsuario, nombreUsuario, direccionUsuario, correoUsuario);

                if (controlador.verificarAdministrador(administrador.getCodigo(), administrador.getCedula())
                        && controlador2.verificarBibliotecario(administrador.getCodigo(), administrador.getCedula())
                        && controlador3.verificarLector(administrador.getCodigo(), administrador.getCedula())) {

                    controlador.registrarAdministrador(administrador);
                    JOptionPane.showMessageDialog(null, "El usuario se ha registrado ");
                    LimpiarCampos();
                    listarTablas();

                } else {
                    JOptionPane.showMessageDialog(null, "Ya hay un usuario con esa cedula y/o codigo");

                }

            }
        } else if (cbGestionTipoUsuario.getSelectedIndex() == 2) {

            if (txtNombreUsuario.getText().isEmpty()
                    || txtCodigoUsuario.getText().isEmpty()
                    || txtCedulaUsuario.getText().isEmpty()
                    || txtDireccionUsuario.getText().isEmpty()
                    || txtCorreoUsuario.getText().isEmpty()
                    || cbTurno.getSelectedIndex() == 0) {

                JOptionPane.showMessageDialog(null, "Llene todos los campos por favor");

            } else {

                String nombreUsuario,
                        codigoUsuario,
                        cedulaUsuario,
                        direccionUsuario,
                        correoUsuario,
                        turnoAtencion = null;

                nombreUsuario = txtNombreUsuario.getText();
                codigoUsuario = txtCodigoUsuario.getText();
                cedulaUsuario = txtCedulaUsuario.getText();
                direccionUsuario = txtDireccionUsuario.getText();
                correoUsuario = txtCorreoUsuario.getText();
                switch (cbTurno.getSelectedIndex()) {
                    case 1:
                        turnoAtencion = "Ma√±ana";
                        break;
                    case 2:
                        turnoAtencion = "Tarde";
                        break;
                    case 3:
                        turnoAtencion = "Noche";
                        break;
                }

                Bibliotecario bibliotecario = new Bibliotecario(turnoAtencion, codigoUsuario, cedulaUsuario, nombreUsuario, direccionUsuario, correoUsuario);

                if (controlador.verificarAdministrador(bibliotecario.getCodigo(), bibliotecario.getCedula())
                        && controlador2.verificarBibliotecario(bibliotecario.getCodigo(), bibliotecario.getCedula())
                        && controlador3.verificarLector(bibliotecario.getCodigo(), bibliotecario.getCedula())) {

                    controlador2.registrarBibliotecario(bibliotecario);
                    JOptionPane.showMessageDialog(null, "El usuario se ha registrado ");
                    LimpiarCampos();
                    listarTablas();

                } else {
                    JOptionPane.showMessageDialog(null, "Ya hay un usuario con esa cedula y/o codigo");

                }
            }
        } else {

            if (txtNombreUsuario.getText().isEmpty()
                    || txtCodigoUsuario.getText().isEmpty()
                    || txtCedulaUsuario.getText().isEmpty()
                    || txtDireccionUsuario.getText().isEmpty()
                    || txtCorreoUsuario.getText().isEmpty()) {

                JOptionPane.showMessageDialog(null, "Llene todos los campos por favor");

            } else {

                String nombreUsuario,
                        codigoUsuario,
                        cedulaUsuario,
                        direccionUsuario,
                        correoUsuario;

                nombreUsuario = txtNombreUsuario.getText();
                codigoUsuario = txtCodigoUsuario.getText();
                cedulaUsuario = txtCedulaUsuario.getText();
                direccionUsuario = txtDireccionUsuario.getText();
                correoUsuario = txtCorreoUsuario.getText();

                Lector lector = new Lector(codigoUsuario, cedulaUsuario, nombreUsuario, direccionUsuario, correoUsuario);

                if (controlador.verificarAdministrador(lector.getCodigo(), lector.getCedula())
                        && controlador2.verificarBibliotecario(lector.getCodigo(), lector.getCedula())
                        && controlador3.verificarLector(lector.getCodigo(), lector.getCedula())) {

                    controlador3.registrarLector(lector);
                    JOptionPane.showMessageDialog(null, "El usuario se ha registrado ");
                    LimpiarCampos();
                    listarTablas();
                } else {
                    JOptionPane.showMessageDialog(null, "Error al registrar el usuario");
                }

            }

        }

    }//GEN-LAST:event_btnRegistrarUsuarioActionPerformed

    private void btnModificarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarUsuarioActionPerformed
        // TODO add your handling code here:

        if (cbGestionTipoUsuario.getSelectedIndex() == 1) {

            if (txtNombreUsuario.getText().isEmpty()
                    || txtCodigoUsuario.getText().isEmpty()
                    || txtCedulaUsuario.getText().isEmpty()
                    || txtDireccionUsuario.getText().isEmpty()
                    || txtCorreoUsuario.getText().isEmpty()
                    || jdFechaIngreso.getDate() == null
                    || txtSalarioAdministrador.getText().isEmpty()) {

                JOptionPane.showMessageDialog(null, "Llene todos los campos por favor");

            } else {

                String nombreUsuario,
                        codigoUsuario,
                        cedulaUsuario,
                        direccionUsuario,
                        correoUsuario;

                double salarioUsuario;
                Date fechaIngresoUsuario;

                nombreUsuario = txtNombreUsuario.getText();
                codigoUsuario = txtCodigoUsuario.getText();
                cedulaUsuario = txtCedulaUsuario.getText();
                direccionUsuario = txtDireccionUsuario.getText();
                correoUsuario = txtCorreoUsuario.getText();
                salarioUsuario = Double.parseDouble(txtSalarioAdministrador.getText());
                fechaIngresoUsuario = jdFechaIngreso.getDate();

                controlador.editarAdministrador(codigoUsuario, cedulaUsuario, nombreUsuario, direccionUsuario, correoUsuario, salarioUsuario, fechaIngresoUsuario);
                JOptionPane.showMessageDialog(null, "El usuario se ha modificado ");
                LimpiarCampos();
                listarTablas();
                cbGestionTipoUsuario.setEnabled(true);
                txtCedulaUsuario.setEditable(true);
                btnModificarUsuario.setEnabled(false);
                btnCancelarUsuario.setVisible(false);
                btnRegistrarUsuario.setEnabled(true);

            }
        } else if (cbGestionTipoUsuario.getSelectedIndex() == 2) {

            if (txtNombreUsuario.getText().isEmpty()
                    || txtCodigoUsuario.getText().isEmpty()
                    || txtCedulaUsuario.getText().isEmpty()
                    || txtDireccionUsuario.getText().isEmpty()
                    || txtCorreoUsuario.getText().isEmpty()
                    || cbTurno.getSelectedIndex() == 0) {

                JOptionPane.showMessageDialog(null, "Llene todos los campos por favor");

            } else {

                String nombreUsuario,
                        codigoUsuario,
                        cedulaUsuario,
                        direccionUsuario,
                        correoUsuario,
                        turnoAtencion = null;

                nombreUsuario = txtNombreUsuario.getText();
                codigoUsuario = txtCodigoUsuario.getText();
                cedulaUsuario = txtCedulaUsuario.getText();
                direccionUsuario = txtDireccionUsuario.getText();
                correoUsuario = txtCorreoUsuario.getText();
                switch (cbTurno.getSelectedIndex()) {
                    case 1:
                        turnoAtencion = "Ma√±ana";
                        break;
                    case 2:
                        turnoAtencion = "Tarde";
                        break;
                    case 3:
                        turnoAtencion = "Noche";
                        break;
                }

                controlador2.editarBibliotecario(codigoUsuario, cedulaUsuario, nombreUsuario, turnoAtencion, correoUsuario, turnoAtencion);
                JOptionPane.showMessageDialog(null, "El usuario se ha modificado ");
                LimpiarCampos();
                listarTablas();
                cbGestionTipoUsuario.setEnabled(true);
                txtCedulaUsuario.setEditable(true);
                btnModificarUsuario.setEnabled(false);
                btnCancelarUsuario.setVisible(false);
                btnRegistrarUsuario.setEnabled(true);

            }
        } else {

            if (txtNombreUsuario.getText().isEmpty()
                    || txtCodigoUsuario.getText().isEmpty()
                    || txtCedulaUsuario.getText().isEmpty()
                    || txtDireccionUsuario.getText().isEmpty()
                    || txtCorreoUsuario.getText().isEmpty()) {

                JOptionPane.showMessageDialog(null, "Llene todos los campos por favor");

            } else {

                String nombreUsuario,
                        codigoUsuario,
                        cedulaUsuario,
                        direccionUsuario,
                        correoUsuario;

                nombreUsuario = txtNombreUsuario.getText();
                codigoUsuario = txtCodigoUsuario.getText();
                cedulaUsuario = txtCedulaUsuario.getText();
                direccionUsuario = txtDireccionUsuario.getText();
                correoUsuario = txtCorreoUsuario.getText();

                controlador3.editarLector(codigoUsuario, cedulaUsuario, nombreUsuario, direccionUsuario, correoUsuario);
                JOptionPane.showMessageDialog(null, "El usuario se ha modificado ");
                LimpiarCampos();
                listarTablas();
                cbGestionTipoUsuario.setEnabled(true);
                txtCedulaUsuario.setEditable(true);
                btnModificarUsuario.setEnabled(false);
                btnCancelarUsuario.setVisible(false);
                btnRegistrarUsuario.setEnabled(true);
            }
        }

    }//GEN-LAST:event_btnModificarUsuarioActionPerformed

    private void btnEliminarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarUsuarioActionPerformed
        // TODO add your handling code here:
        String cedula = JOptionPane.showInputDialog("Introduzca la cedula del usuario a eliminar");

        if (controlador.eliminarAdministrador(cedula)) {
            JOptionPane.showMessageDialog(null, "Eliminado Correctamente el administrador",
                    "Informe", JOptionPane.INFORMATION_MESSAGE);
        } else if (controlador2.eliminarBibliotecario(cedula)) {
            JOptionPane.showMessageDialog(null, "Eliminado Correctamente el bibliotecario",
                    "Informe", JOptionPane.INFORMATION_MESSAGE);
        } else if (controlador3.eliminarLector(cedula)) {
            JOptionPane.showMessageDialog(null, "Eliminado Correctamente el lector",
                    "Informe", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "No se ha podido eliminar");
        }

        listarTablas();

    }//GEN-LAST:event_btnEliminarUsuarioActionPerformed

    private void btnBuscarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarUsuarioActionPerformed
        // TODO add your handling code here:

        String cedula = JOptionPane.showInputDialog("Ingrese la cedula del Usuario");
        Administrador administrador = controlador.buscarAdministrador(cedula);
        Bibliotecario bibliotecario = controlador2.buscarBibliotecario(cedula);
        Lector lector = controlador3.buscarLector(cedula);

        if (administrador != null) {
            cbGestionTipoUsuario.setSelectedIndex(1);
            cbGestionTipoUsuario.setEnabled(false);
            txtNombreUsuario.setText(administrador.getNombreCompleto());
            txtCedulaUsuario.setText(administrador.getCedula());
            txtCedulaUsuario.setEditable(false);
            txtCodigoUsuario.setText(administrador.getCodigo());
            txtCorreoUsuario.setText(administrador.getCorreo());
            txtDireccionUsuario.setText(administrador.getDireccion());
            txtSalarioAdministrador.setText(String.valueOf(administrador.getSalario()));
            jdFechaIngreso.setDate(administrador.getFechaIngreso());
            btnModificarUsuario.setEnabled(true);
            btnCancelarUsuario.setVisible(true);
            btnRegistrarUsuario.setEnabled(false);

        } else if (bibliotecario != null) {
            cbGestionTipoUsuario.setSelectedIndex(2);
            cbGestionTipoUsuario.setEnabled(false);
            txtNombreUsuario.setText(bibliotecario.getNombreCompleto());
            txtCedulaUsuario.setText(bibliotecario.getCedula());
            txtCedulaUsuario.setEditable(false);
            txtCodigoUsuario.setText(bibliotecario.getCodigo());
            txtCorreoUsuario.setText(bibliotecario.getCorreo());
            txtDireccionUsuario.setText(bibliotecario.getDireccion());
            if (bibliotecario.getTurnoAtencion().equals("Ma√±ana")) {
                cbTurno.setSelectedIndex(1);
            } else if (bibliotecario.getTurnoAtencion().equals("Tarde")) {
                cbTurno.setSelectedIndex(2);
            } else {
                cbTurno.setSelectedIndex(3);
            }
            btnModificarUsuario.setEnabled(true);
            btnCancelarUsuario.setVisible(true);
            btnRegistrarUsuario.setEnabled(false);

        } else if (lector != null) {
            txtNombreUsuario.setText(lector.getNombreCompleto());
            txtCedulaUsuario.setText(lector.getCedula());
            txtCedulaUsuario.setEditable(false);
            txtCodigoUsuario.setText(lector.getCodigo());
            txtCorreoUsuario.setText(lector.getCorreo());
            txtDireccionUsuario.setText(lector.getDireccion());
            cbGestionTipoUsuario.setSelectedIndex(3);
            cbGestionTipoUsuario.setEnabled(false);
            btnModificarUsuario.setEnabled(true);
            btnCancelarUsuario.setVisible(true);
            btnRegistrarUsuario.setEnabled(false);

        } else {
            JOptionPane.showMessageDialog(null, "No se ha podido encontrar el usuario");
        }

    }//GEN-LAST:event_btnBuscarUsuarioActionPerformed

    private void txtCodigoUsuarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoUsuarioKeyTyped
        // TODO add your handling code here:

        char c = evt.getKeyChar();

        if (c < '0' || c > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtCodigoUsuarioKeyTyped

    private void txtCedulaUsuarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulaUsuarioKeyTyped
        // TODO add your handling code here:

        char c = evt.getKeyChar();

        if (c < '0' || c > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtCedulaUsuarioKeyTyped

    private void txtSalarioAdministradorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSalarioAdministradorKeyTyped
        // TODO add your handling code here:

        char c = evt.getKeyChar();

        if (c < '0' || c > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtSalarioAdministradorKeyTyped

    private void txtNombreUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreUsuarioActionPerformed

    private void txtNombreUsuarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreUsuarioKeyTyped
        // TODO add your handling code here:

        char c = evt.getKeyChar();

        if ((c < 'a' || c > 'z') && (c < 'A' || c > 'Z')) {
            evt.consume();
        }
    }//GEN-LAST:event_txtNombreUsuarioKeyTyped

    private void txtCedulaUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCedulaUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCedulaUsuarioActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed

        controlador.guardarArchivoA();
        controlador2.guardarArchivoB();
        controlador3.guardarArchivoL();


    }//GEN-LAST:event_formWindowClosed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmBibliotecario.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmBibliotecario.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmBibliotecario.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmBibliotecario.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmGestionTodos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarUsuario;
    private javax.swing.JButton btnCancelarUsuario;
    private javax.swing.JButton btnEliminarUsuario;
    private javax.swing.JButton btnModificarUsuario;
    private javax.swing.JButton btnRegistrarUsuario;
    private javax.swing.JComboBox<String> cbGestionTipoUsuario;
    private javax.swing.JComboBox<String> cbTurno;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private com.toedter.calendar.JDateChooser jdFechaIngreso;
    private javax.swing.JTable tblAdministrador;
    private javax.swing.JTable tblBibliotecario;
    private javax.swing.JTable tblLector;
    private javax.swing.JTextField txtCedulaUsuario;
    private javax.swing.JTextField txtCodigoUsuario;
    private javax.swing.JTextField txtCorreoUsuario;
    private javax.swing.JTextField txtDireccionUsuario;
    private javax.swing.JTextField txtNombreUsuario;
    private javax.swing.JTextField txtSalarioAdministrador;
    // End of variables declaration//GEN-END:variables
}
